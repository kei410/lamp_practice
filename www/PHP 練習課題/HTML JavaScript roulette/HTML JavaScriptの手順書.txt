===========================================
【HTML5/CSS3　手引き書】

/// HTML5/CSS3の最終課題のアドバイス ///
・body要素の横幅は指定しない。

・HTMLは8章のレイアウトで習った大枠を使用して骨格を決める
　覚えておくと便利な要素に「main、figure、figcaption、small」などがある
・意味のないdiv要素はできるだけ使わず、意味のある要素で作成する

　sectionをうまく利用する
　divは他に該当する要素が無くなった時の最終手段と考えて多用しない
　
　
・id指定、class指定を多用しない
　多用すればするほどHTMLが複雑になり、CSSの設定が難しくなっていく
　結果として無駄なものが多くなり、いずれは身動きの取れないデザインになってしまう
　子孫セレクタ、子セレクタ、隣接セレクタなど疑似セレクタを効果的に使う事で
　HTMLソースをシンプルに作成することができる
　・子孫セレクタ → header section、header ul aなど
　・子セレクタ → body > img、main section > imgなど
　・隣接セレクタ → header li + li、main h3 + pなど
　・疑似セレクタ → main nav li:last-child、main artcile section p:first-of-typeなど

・アイコンはCSS側で設定すると楽である
　「CSS アイコン 背景画像」で検索してみる
　参考サイト → https://www.emuramemo.com/entry/2014/09/13/145432


===========================================
【JS/jQuery　手順書】

/// 3-11課題 九九表　作成の為の手順書///
3-11課題は次の手順で一つずつ丁寧に作ってください。。
１．まず大事なことは一度に全部を作らない。
　細かなことが理解できないのにすべてを一度に作ると何もわからなくなります。
２．まずは、文字列「1*1=1」だけをひとつ画面上に表示させましょう。
　この時for文はまだ使いません。
３．それが表示できたら、9回繰り返すfor文を用意し、その中に上記２．の処理を入れます。
　すると「1*1=1」が横に9個できます。（1の段だけができる）
　この時、文字がすべてくっついてしまうので、半角スペースを1つ入れて隣同士を離します。
４．次に、横に行くにつれ変えないといけない数字があります。
　その数字を変数に変え、自動的に数字が変わるようにします。
　この時、文字と変数の組み合わせが出てくるので、「1-1 変数とは」で習った通り、文字と変数の結合が必要になります。
５．次に2行目を考えますが、このままでは横に並ぶ事になるので、今作った最後に「<br>」の表示を追加しておきます。
　見た目は変わりません。
　ここまでで１の段（9個）がようやく完成します。
６．次に、この「1の段」を9回繰り返すと9の段までが作れるので新しく9回繰り返すfor文を用意します。
　for文ができたら、そのfor文の中に、5までに作った内容をすべて入れます。
　これで同じものが9段できます。
７．次に、縦に行くにつれ変えないといけない数字があります。
　その数字を変数に変え、自動的に数字が変わるようにします。
　この時、文字と変数の組み合わせが出てくるので、「1-1 変数とは」で習った通り、文字と変数の結合が必要になります。

手順通り行えば教科書とほぼ同じような九九表ができるはずです。


/// 8-5 課題 　作成の為の手順書///
8-5 課題は次の手順で作るといいと思います。
１．「8-3 要素の作成・追加」を参考にしてa要素を作成する
　　この時、inputボックスは考えず、文字だけで作成してみる
　　a要素はinnerHTMLだけでは作成できなくて、href属性にURLを指定する必要がある
　　その為に、「7-3 DOMからHTMLやCSSを操作」のサンプルにヒントがあります
　　（しっかりと理解しておくこと）
２．１．ができたら、文字で設定しているところを、inputボックス内の文字を使うように変更する
　　この時も、「7-3 DOMからHTMLやCSSを操作」のサンプルにヒントがあります

/// 8-7 課題(中級)　作成の為の手順書  ///
8-7 課題(中級)は次の手順で作るといいと思います。
１．ボタンを押すと、入力ボックスに入れた文字すべてが表示できるようにすること
　　その為に、「7-3 DOMからHTMLやCSSを操作」のサンプルにヒントがあります
　　この時、まだタイマー機能は使わない
　　3文字以上入力しておく
２．今度は、その文字の中から1文字だけ表示するためにはどうすればいいのか？
　　「Javascript 一部の文字」などで検索する
　　3種類あるがどれを使うのがいいか。
３．次に、2文字を表示する、3文字を表示にはどこをどう変更すればいいのか？
４．３．の機能をボタンを押す度、自動変更する為に、数字を変数に変える
　　その変数を、ボタンを押す度1ずつ増やしていく
５．タイマー機能を使って４．の処理を自動で実行させるようにする
　　タイマー機能（二重押し防止、ストップ機能も含む）を組み込むには、
　　「8-4 一定間隔で繰り返し実行」のサンプルclearinterval.htmlがしっかり理解できてないと作れません。
６．そのままだと止まらないので、自動で止まる機能を作る
　　どこに何を書けばいいのか？
　　まず、どういう状態になったら止めるのか？
　　じゃあそれをどこに書けばいいのか？
　　自動的に止めるための条件は、何がどういう時、止めたいのかを考える
７．入力ボックスの文字を変更して、再スタートしても正しく動作するようにする
　
上記の手順でひとつずつ作ってみましょう。


/// カウントダウンタイマー　作成の為の手順書 ///
カウントダウンタイマーは次の手順で作成するといいと思います。
１．まずは、分、秒を考えず、10秒タイマーを作成する
・この方法は、「8-7 課題(中級)」が参考になります。
２．HTML側で表示場所を決めたら、Javascriptで最初の初期値を表示させるようにする
３．スタートボタンを押したら、10秒を初期値として、カウントダウンしながら
　　それを表示する
　　この時、1秒単位だと時間がかかるので0.5秒とかスピードアップしてテストする。
４．自動ストップ機能を作る
　・0秒になったらカウントダウンが停止し、「Time UP!」の表示をする
　　この時文字色を赤にする
５．リセット機能を作る
　　ボタンを押すとカウントダウンが停止し、10秒に戻る
６．二重押し防止の機能がちゃんとできているか
　・いろんなテストをしてみる
　　スタート → ストップ → リセット
　　スタート → ストップ → スタート → リセット
　　スタート → ストップ → スタート → ストップ → リセット
　　スタート → スタート → ストップ → ストップ → リセット
７．秒数を70秒にして「01:10」と表示されるように変更する
　・秒数から、どうやれば分と秒に分けられるか？
　・どうやれば、「01:10」と表示できるかを考える
　・ネット検索で「Javascript 頭に0」とかで検索してみる
　　1行で実現できる方法がある
８．分と秒の分解表示は同じ処理を複数個所に書かないといけなくなるのでfunctionに纏め、似たような処理はfunctionの呼び出し（実行）で対応する
　　テストは、0.1秒単位にし、10倍速でテストする。

あると便利な機能（プラスアルファ）
・初期状態の秒数表示は、HTML側で作らず、Javascript側で自動表示させるのがよい
・分数秒数の分解表示は複数個所で行うようなら、同じ処理をfunctionにまとめるとプログラムがシンプルになる
・最大秒数は何か所も訂正するのではなく、変数などに入れ、変数でセットする
　1か所変更するとすべてが自動的に変わるようにするとメンテナンス性が高くなります


/// 10-6 課題(中級)　作成の為の手順書 ///
九九表は次の手順で作成するといいと思います。
１．まず、HTMLでtableを作ることを学びましょう。
　「html table」とかで検索すると、いくつもサンプルが出てきます。
　参考サイト → https://www.sejuku.net/blog/49377
　それらを読んで、まずは、横2列、縦2列の表をHTMLで作成し、思った通りの表示ができるか確認しましょう。
　文字は何でもいいから入れておくとより理解しやすいです。
２．それが理解できたら、次は作ったものを一度コメントにして、jQueryで1マスだけを作ります。
　この時、どこに何を追加するのかを考えるとわかりやすいと思います。
　マスの中の文字は、最初は「1*1=1」としましょう。
３．それが表示できたら、同じマスを横方向に２つ作ります。
　まだ「for文」は使いません。
　これも手作業で作ります。
４．さてここから、for文の繰り返しを使って、9個連続で作る方法を考えます。
　何度も同じ事を繰り返すのは無駄がありますから、for文で自動的に9個作らせます。
　これで、1行ができます。
　中に入れる文字が同じになってしまうので、どこの数字が変化するか考え、
　どうすれば自動的に変わるかを考えましょう。（変数に置き換える）
５．次に４．で作った1行を9回繰り返せば9行できます。
　４．の処理をすべて新しいfor文の中に入れます。
　ここで縦に数字が変わらないといけない場所があるので、それを変数に置き換えます。
　もし横方向に無数の箱が作られた場合、その理由を考え、最後の「tr」だけを指定するにはどうすればいいかを考えます。
　この時、CSSで習った手法が使えます。（連続する要素の最後だけデザインを変える方法と同じ）
　　アドバイス → 「:last-child」
６．すべてのマス目ができたら、どこの要素に背景色を塗ればいいでしょう？
　では、まずは、小さなマス目すべてに背景色を付けてみましょう。
　　アドバイス → .addClass()をうまく利用しましょう。
　その後市松模様（交互）にするためには、どのようにすればいいでしょうか？
　　アドバイス → jQueryには、偶数番目だけ、奇数番目だけを指定する方法があります。



/// ルーレット　作成の為の手順書 ///
ルーレットは次のような手順で作るといいと思います。
１．BOXはtableを使わず、ul要素、li要素などを使い、CSSでデザインした方が自由度が高まる
　・CSSのfloatやflexboxを使って横並びにする方法が便利
　　この時、BOXは４つから始めると、テストが楽になる
２．スタートボタンを押して、
　　BOX要素すべてに背景色を付けるにはどうするか？（点滅色）
　・最初はタイマー機能を使わず作成すると解りやすい
　・CSS側で、点滅色、ストップ色、使用済み色のclassを作っておいて、
　　addclassを使うと後々便利になる
３．では、BOXのどれか一つに背景色を付けるにはどうするのか？
　・Math.random()を使いどれか一つの数字を決める
　・その後該当するBOXに色を付ける
　　この時、.eq()メソッドを使うと便利
　・.eq()メソッドの使い方
　　randが2の時、「.eq(rand)」と追記すると、前から3番目を指定することができます。
４．このままでは塗りつぶれていくだけなので、点滅をさせるためには一つ前の色を消す必要がある
　・この時、.removeClass()を使うと便利
　　では、どうやってBOXを指定すればいいのか？（どの場所に対して行うのか？）
　　いろんな方法があるが、class名を指定する方法が便利
５．ストップを押した時、その点滅色を消して、停止色（ストップ色）を付ける
　・この時、.removeClass()、.addclass()を使うと便利
　　どの場所に対して行うのか？（class名を指定する方法が便利）
６．今のままだとストップ色が残ってしまうので、
　　次にスタートしたら、ストップ色を使用済み色に変える
　・この時も.removeClass()、.addclass()を使うとできます。
７．２．のランダムな数字を選択する時、使用済み以外だけで選択できるようにする
　・ランダム数字の取得がいつも４のままである
　　そのため、残りのマス目に合わせてランダムな数字の個数を変える必要がある。
　　そこで、.not()を使って未使用の数を前もって取得しておく（.lengthで取得できる）
　・.not()メソッドの使い方
　　「class="used"」が付いた要素を除外する時は、指定した要素に「.not('.used')」と追記する。
８．２．の着色を使用済み以外の中で着色する
　・同じく.not()メソッドが必要となる
　　着色する時も使用済みを.not()で外して着色する
９．リセット機能
　・何をどうすれば初期状態に戻るか？
１０．タイマー機能を使って７．から上の処理を自動で実行させるようにする
　・タイマー機能は、「10-5 課題」が参考になります。
　・この時、二重押し防止などのボタンコントロールが必要になりますが、
　　教科書に書いてあるdisabledをどう使うのか
　　ネット検索で「jquery disabled」と検索してみる
　　どのタイミングでどのボタンをどうコントロールするのか？を考える
　　start_flagが要らなくなる
　・いろんなテストをしてみる
　　スタート → ストップ → リセット
　　スタート → ストップ → スタート → リセット
　　スタート → ストップ → スタート → ストップ → リセット
　　スタート → スタート → ストップ → ストップ → リセット
　　スタート → ストップ → リセット → ストップ → ストップ
１１．ゲーム終了の判定
　・どうなったらゲーム終了と判断するのか？
　　どのタイミングで何をした時に、ゲーム終了と判断するのか
　　ゲームがこれ以上続けられないようにする、という事は、何をしておくべきなのか？

上記の手順でひとつずつ作ってみましょう。
・4つのマス目ですべてのテストが完了したら、ようやく16個のマス目にし、
　デザインを整えて指定要件の最終確認をしましょう。

あると便利な機能（プラスアルファ）
・BOXをjQueryで自動的に生成すると拡張性が高くなります。

